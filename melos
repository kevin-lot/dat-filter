#!/bin/bash

set -e # exit on first error

WORKSPACES=(
    "packages/app"
    "packages/artistic"
    "packages/domain"
    "packages/string"
)

analyze() {
    echo "Running analysis..."
    dart format -l 120 .
    dart fix --dry-run
    dart analyze
}

generate() {
    echo "Running build_runner..."
    for WORKSPACE in "${WORKSPACES[@]}"; do
        pushd "${WORKSPACE}"
        dart run build_runner build --delete-conflicting-outputs
        popd
    done
}

# Apply Dart fixes
fix() {
    echo "Applying Dart fixes..."
    dart fix --apply
    dart analyze
    dart format -l 120 .
}

get() {
    echo "Getting dependencies..."
    dart pub get
}

locale() {
    echo "Generating localization..."
    pushd packages/string
    flutter gen-l10n
    dart fix --apply
    popd
}

upgrade() {
    echo "Upgrading dependencies..."
    dart pub upgrade
}

outdated() {
    echo "Show outdated dependencies..."
    dart pub outdated
}

help() {
    echo "Just a wrapper to imitate melos"
    echo "Usage: $0 {analyze|generate|fix|get|locale|upgrade}"
    exit 1
}

case "$1" in
analyze) analyze ;;
fix) fix ;;
generate) generate ;;
get) get ;;
locale) locale ;;
outdated) outdated ;;
upgrade) upgrade ;;
*) help ;;
esac
